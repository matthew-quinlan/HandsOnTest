// <auto-generated />
using HandsOnTest.DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HandsOnTest.DAL.Migrations
{
    [DbContext(typeof(HandsOnTestContext))]
    partial class HandsOnTestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HandsOnTest.DAL.Models.Answer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnswerId"), 1L, 1);

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AnswerId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("Answer", (string)null);
                });

            modelBuilder.Entity("HandsOnTest.DAL.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"), 1L, 1);

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.ToTable("Question", (string)null);

                    b.HasData(
                        new
                        {
                            QuestionId = 1,
                            QuestionText = "In what city were you born?"
                        },
                        new
                        {
                            QuestionId = 2,
                            QuestionText = "What is the name of your favorite pet?"
                        },
                        new
                        {
                            QuestionId = 3,
                            QuestionText = "What is your mother's maiden name?"
                        },
                        new
                        {
                            QuestionId = 4,
                            QuestionText = "What was the mascot of your high school?"
                        },
                        new
                        {
                            QuestionId = 5,
                            QuestionText = "What was the make of your first car?"
                        },
                        new
                        {
                            QuestionId = 6,
                            QuestionText = "What was your favorite toy as a child?"
                        },
                        new
                        {
                            QuestionId = 7,
                            QuestionText = "Where did you meet your spouse?"
                        },
                        new
                        {
                            QuestionId = 8,
                            QuestionText = "What is your favorite meal?"
                        },
                        new
                        {
                            QuestionId = 9,
                            QuestionText = "Who is your favorite actor / actress ?"
                        },
                        new
                        {
                            QuestionId = 10,
                            QuestionText = "What is your favorite album ?"
                        });
                });

            modelBuilder.Entity("HandsOnTest.DAL.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("HandsOnTest.DAL.Models.Answer", b =>
                {
                    b.HasOne("HandsOnTest.DAL.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK_Answer_Question");

                    b.HasOne("HandsOnTest.DAL.Models.User", "User")
                        .WithMany("Answers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_User_Answer");

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HandsOnTest.DAL.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("HandsOnTest.DAL.Models.User", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
